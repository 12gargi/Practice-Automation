<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="7" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-16T15:42:09 IST" name="Suite" finished-at="2024-05-16T15:46:03 IST" duration-ms="234122">
    <groups>
    </groups>
    <test started-at="2024-05-16T15:42:09 IST" name="DialogBox" finished-at="2024-05-16T15:42:30 IST" duration-ms="21282">
      <class name="tests.DialogBoxTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.DialogBoxTest@2a7f1f10]" started-at="2024-05-16T15:42:09 IST" name="beforeTest" finished-at="2024-05-16T15:42:10 IST" duration-ms="722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DialogBoxTest@2a7f1f10]" started-at="2024-05-16T15:42:10 IST" name="startUp" finished-at="2024-05-16T15:42:19 IST" duration-ms="9296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dialog-boxes/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="ToEnterdialogBox()[pri:0, instance:tests.DialogBoxTest@2a7f1f10]" started-at="2024-05-16T15:42:19 IST" name="ToEnterdialogBox" description="test to verify modal dialog box" finished-at="2024-05-16T15:42:29 IST" duration-ms="10245" status="FAIL">
          <exception class="org.openqa.selenium.JavascriptException">
            <message>
              <![CDATA[javascript error: {"status":32,"value":"An invalid or illegal selector was specified"}
  (Session info: chrome-headless-shell=124.0.6367.208)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [cc0acbd7d10612a5a1af4602aa7b075b, findElement {value=//*[@id="create-user"], using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53687}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53687/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: cc0acbd7d10612a5a1af4602aa7b075b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.JavascriptException: javascript error: {"status":32,"value":"An invalid or illegal selector was specified"}
  (Session info: chrome-headless-shell=124.0.6367.208)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [cc0acbd7d10612a5a1af4602aa7b075b, findElement {value=//*[@id="create-user"], using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53687}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53687/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: cc0acbd7d10612a5a1af4602aa7b075b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.click(Unknown Source)
at pageEvent.DialogBox.enterIntoDialogBox(DialogBox.java:54)
at tests.DialogBoxTest.ToEnterdialogBox(DialogBoxTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.JavascriptException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToEnterdialogBox -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.DialogBoxTest@2a7f1f10]" started-at="2024-05-16T15:42:29 IST" name="teardown" finished-at="2024-05-16T15:42:30 IST" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.DialogBoxTest@2a7f1f10]" started-at="2024-05-16T15:42:30 IST" name="tearEnd" finished-at="2024-05-16T15:42:30 IST" duration-ms="638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.DialogBoxTest -->
    </test> <!-- DialogBox -->
    <test started-at="2024-05-16T15:42:30 IST" name="Accordions" finished-at="2024-05-16T15:43:11 IST" duration-ms="41080">
      <class name="tests.AccordionTests">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.AccordionTests@4c60d6e9]" started-at="2024-05-16T15:42:30 IST" name="beforeTest" finished-at="2024-05-16T15:42:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.AccordionTests@4c60d6e9]" started-at="2024-05-16T15:42:30 IST" name="startUp" finished-at="2024-05-16T15:42:36 IST" duration-ms="5376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[accordion-and-tabs/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="verifyThatAccordionsAreWorking()[pri:0, instance:tests.AccordionTests@4c60d6e9]" started-at="2024-05-16T15:42:36 IST" name="verifyThatAccordionsAreWorking" description="To verify That Accordions Are Working" finished-at="2024-05-16T15:43:11 IST" duration-ms="35318" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":".demo-frame.lazyloaded"}
  (Session info: chrome-headless-shell=124.0.6367.208)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4011df09c3d35088742f081eba7fa77e, findElement {value=.demo-frame.lazyloaded, using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53736}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53736/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4011df09c3d35088742f081eba7fa77e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".demo-frame.lazyloaded"}
  (Session info: chrome-headless-shell=124.0.6367.208)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4011df09c3d35088742f081eba7fa77e, findElement {value=.demo-frame.lazyloaded, using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53736}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53736/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4011df09c3d35088742f081eba7fa77e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.frame(RemoteWebDriver.java:1105)
at pageEvent.AccordionsAndTabs.switchToAframe(AccordionsAndTabs.java:42)
at pageEvent.AccordionsAndTabs.accordionsIsWorking(AccordionsAndTabs.java:47)
at tests.AccordionTests.verifyThatAccordionsAreWorking(AccordionTests.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThatAccordionsAreWorking -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.AccordionTests@4c60d6e9]" started-at="2024-05-16T15:43:11 IST" name="teardown" finished-at="2024-05-16T15:43:11 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.AccordionTests@4c60d6e9]" started-at="2024-05-16T15:43:11 IST" name="tearEnd" finished-at="2024-05-16T15:43:11 IST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.AccordionTests -->
    </test> <!-- Accordions -->
    <test started-at="2024-05-16T15:43:12 IST" name="Dropdown" finished-at="2024-05-16T15:43:28 IST" duration-ms="16333">
      <class name="tests.DropDownTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.DropDownTest@7f485fda]" started-at="2024-05-16T15:43:12 IST" name="beforeTest" finished-at="2024-05-16T15:43:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DropDownTest@7f485fda]" started-at="2024-05-16T15:43:12 IST" name="startUp" finished-at="2024-05-16T15:43:16 IST" duration-ms="4919" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[select-dropdown-menu/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testForDropDowselection()[pri:0, instance:tests.DropDownTest@7f485fda]" started-at="2024-05-16T15:43:16 IST" name="testForDropDowselection" description="Test for Validation of DropDown" finished-at="2024-05-16T15:43:28 IST" duration-ms="11214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForDropDowselection -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.DropDownTest@7f485fda]" started-at="2024-05-16T15:43:28 IST" name="teardown" finished-at="2024-05-16T15:43:28 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.DropDownTest@7f485fda]" started-at="2024-05-16T15:43:28 IST" name="tearEnd" finished-at="2024-05-16T15:43:28 IST" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.DropDownTest -->
    </test> <!-- Dropdown -->
    <test started-at="2024-05-16T15:43:28 IST" name="ProgressBar" finished-at="2024-05-16T15:44:29 IST" duration-ms="60703">
      <class name="tests.ProgressBarTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.ProgressBarTest@5f049ea1]" started-at="2024-05-16T15:43:28 IST" name="beforeTest" finished-at="2024-05-16T15:43:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ProgressBarTest@5f049ea1]" started-at="2024-05-16T15:43:28 IST" name="startUp" finished-at="2024-05-16T15:43:32 IST" duration-ms="4460" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[progress-bar/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testFor100PercentCompletion()[pri:0, instance:tests.ProgressBarTest@5f049ea1]" started-at="2024-05-16T15:43:32 IST" name="testFor100PercentCompletion" description="test to verify ProgressBar completes 100%" finished-at="2024-05-16T15:44:13 IST" duration-ms="40488" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failed to complete progress bar to 100%]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failed to complete progress bar to 100%
at org.testng.Assert.fail(Assert.java:110)
at pageEvent.ProgressBar.ProgressBarcompletes100Percent(ProgressBar.java:72)
at tests.ProgressBarTest.testFor100PercentCompletion(ProgressBarTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFor100PercentCompletion -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ProgressBarTest@5f049ea1]" started-at="2024-05-16T15:44:13 IST" name="teardown" finished-at="2024-05-16T15:44:13 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ProgressBarTest@5f049ea1]" started-at="2024-05-16T15:44:13 IST" name="startUp" finished-at="2024-05-16T15:44:18 IST" duration-ms="4987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[progress-bar/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testForProgressBarButton()[pri:0, instance:tests.ProgressBarTest@5f049ea1]" started-at="2024-05-16T15:44:18 IST" name="testForProgressBarButton" description="test to verify ProgressBar Start Download Button working" finished-at="2024-05-16T15:44:28 IST" duration-ms="10376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForProgressBarButton -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ProgressBarTest@5f049ea1]" started-at="2024-05-16T15:44:28 IST" name="teardown" finished-at="2024-05-16T15:44:28 IST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.ProgressBarTest@5f049ea1]" started-at="2024-05-16T15:44:28 IST" name="tearEnd" finished-at="2024-05-16T15:44:29 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.ProgressBarTest -->
    </test> <!-- ProgressBar -->
    <test started-at="2024-05-16T15:44:29 IST" name="Sliders" finished-at="2024-05-16T15:44:44 IST" duration-ms="15112">
      <class name="tests.SliderTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SliderTest@645aa696]" started-at="2024-05-16T15:44:29 IST" name="beforeTest" finished-at="2024-05-16T15:44:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SliderTest@645aa696]" started-at="2024-05-16T15:44:29 IST" name="startUp" finished-at="2024-05-16T15:44:33 IST" duration-ms="4757" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sliders/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="VerifyingSlidersAreWorking()[pri:0, instance:tests.SliderTest@645aa696]" started-at="2024-05-16T15:44:33 IST" name="VerifyingSlidersAreWorking" description="Verifying Sliders Are Working" finished-at="2024-05-16T15:44:44 IST" duration-ms="10172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyingSlidersAreWorking -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SliderTest@645aa696]" started-at="2024-05-16T15:44:44 IST" name="teardown" finished-at="2024-05-16T15:44:44 IST" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SliderTest@645aa696]" started-at="2024-05-16T15:44:44 IST" name="tearEnd" finished-at="2024-05-16T15:44:44 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SliderTest -->
    </test> <!-- Sliders -->
    <test started-at="2024-05-16T15:44:44 IST" name="Frames_Windows" finished-at="2024-05-16T15:45:00 IST" duration-ms="15823">
      <class name="tests.TabsAndWindowsTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.TabsAndWindowsTest@5524cca1]" started-at="2024-05-16T15:44:44 IST" name="beforeTest" finished-at="2024-05-16T15:44:44 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.TabsAndWindowsTest@5524cca1]" started-at="2024-05-16T15:44:44 IST" name="startUp" finished-at="2024-05-16T15:44:48 IST" duration-ms="4236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[frames-and-windows/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testToSwitchToOtherTab()[pri:0, instance:tests.TabsAndWindowsTest@5524cca1]" started-at="2024-05-16T15:44:48 IST" name="testToSwitchToOtherTab" description="Test To Verify That After Clicking Button It Changes the Tab" finished-at="2024-05-16T15:44:59 IST" duration-ms="11430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSwitchToOtherTab -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.TabsAndWindowsTest@5524cca1]" started-at="2024-05-16T15:44:59 IST" name="teardown" finished-at="2024-05-16T15:44:59 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.TabsAndWindowsTest@5524cca1]" started-at="2024-05-16T15:44:59 IST" name="tearEnd" finished-at="2024-05-16T15:45:00 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.TabsAndWindowsTest -->
    </test> <!-- Frames_Windows -->
    <test started-at="2024-05-16T15:45:00 IST" name="Tooltip" finished-at="2024-05-16T15:45:15 IST" duration-ms="15982">
      <class name="tests.ToolTipTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.ToolTipTest@710c2b53]" started-at="2024-05-16T15:45:00 IST" name="beforeTest" finished-at="2024-05-16T15:45:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ToolTipTest@710c2b53]" started-at="2024-05-16T15:45:00 IST" name="startUp" finished-at="2024-05-16T15:45:05 IST" duration-ms="5258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tooltip/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testToVerifyTooltipFunctionality()[pri:0, instance:tests.ToolTipTest@710c2b53]" started-at="2024-05-16T15:45:05 IST" name="testToVerifyTooltipFunctionality" description="test to verify whether the tooltip works fine" finished-at="2024-05-16T15:45:15 IST" duration-ms="10562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToVerifyTooltipFunctionality -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ToolTipTest@710c2b53]" started-at="2024-05-16T15:45:15 IST" name="teardown" finished-at="2024-05-16T15:45:15 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.ToolTipTest@710c2b53]" started-at="2024-05-16T15:45:15 IST" name="tearEnd" finished-at="2024-05-16T15:45:15 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.ToolTipTest -->
    </test> <!-- Tooltip -->
    <test started-at="2024-05-16T15:45:16 IST" name="MultipleElements" finished-at="2024-05-16T15:45:31 IST" duration-ms="15569">
      <class name="tests.SelectElementsTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SelectElementsTest@1750fbeb]" started-at="2024-05-16T15:45:16 IST" name="beforeTest" finished-at="2024-05-16T15:45:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SelectElementsTest@1750fbeb]" started-at="2024-05-16T15:45:16 IST" name="startUp" finished-at="2024-05-16T15:45:21 IST" duration-ms="5065" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[select-elements/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyMultipleSelect()[pri:0, instance:tests.SelectElementsTest@1750fbeb]" started-at="2024-05-16T15:45:21 IST" name="toVerifyMultipleSelect" description=" To Verify that it can select Multiple Element " finished-at="2024-05-16T15:45:31 IST" duration-ms="10349" status="FAIL">
          <exception class="org.openqa.selenium.interactions.MoveTargetOutOfBoundsException">
            <message>
              <![CDATA[move target out of bounds
  (Session info: chrome-headless-shell=124.0.6367.208)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3a43852cec0f6354806c3e5aa7c90160, actions {actions=[org.openqa.selenium.interactions.Sequence@3cdc7b09, org.openqa.selenium.interactions.Sequence@7364eed1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54113}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54113/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3a43852cec0f6354806c3e5aa7c90160]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: move target out of bounds
  (Session info: chrome-headless-shell=124.0.6367.208)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3a43852cec0f6354806c3e5aa7c90160, actions {actions=[org.openqa.selenium.interactions.Sequence@3cdc7b09, org.openqa.selenium.interactions.Sequence@7364eed1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54113}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54113/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3a43852cec0f6354806c3e5aa7c90160
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:605)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:603)
at org.openqa.selenium.interactions.Actions.perform(Actions.java:568)
at pageEvent.SelectElements.toSelectMutiEelement(SelectElements.java:58)
at tests.SelectElementsTest.toVerifyMultipleSelect(SelectElementsTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.interactions.MoveTargetOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyMultipleSelect -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SelectElementsTest@1750fbeb]" started-at="2024-05-16T15:45:31 IST" name="teardown" finished-at="2024-05-16T15:45:31 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SelectElementsTest@1750fbeb]" started-at="2024-05-16T15:45:31 IST" name="tearEnd" finished-at="2024-05-16T15:45:31 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SelectElementsTest -->
    </test> <!-- MultipleElements -->
    <test started-at="2024-05-16T15:45:31 IST" name="Spinner" finished-at="2024-05-16T15:45:48 IST" duration-ms="16448">
      <class name="tests.SpinnerTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SpinnerTest@6440112d]" started-at="2024-05-16T15:45:31 IST" name="beforeTest" finished-at="2024-05-16T15:45:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SpinnerTest@6440112d]" started-at="2024-05-16T15:45:31 IST" name="startUp" finished-at="2024-05-16T15:45:36 IST" duration-ms="5297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[spinner/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="ToVerifySpinner()[pri:0, instance:tests.SpinnerTest@6440112d]" started-at="2024-05-16T15:45:36 IST" name="ToVerifySpinner" description="To verify wether Spinner works as expected" finished-at="2024-05-16T15:45:47 IST" duration-ms="11098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifySpinner -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SpinnerTest@6440112d]" started-at="2024-05-16T15:45:47 IST" name="teardown" finished-at="2024-05-16T15:45:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SpinnerTest@6440112d]" started-at="2024-05-16T15:45:47 IST" name="tearEnd" finished-at="2024-05-16T15:45:48 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SpinnerTest -->
    </test> <!-- Spinner -->
    <test started-at="2024-05-16T15:45:48 IST" name="Sorting" finished-at="2024-05-16T15:46:03 IST" duration-ms="15621">
      <class name="tests.SortableTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SortableTest@451001e5]" started-at="2024-05-16T15:45:48 IST" name="beforeTest" finished-at="2024-05-16T15:45:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SortableTest@451001e5]" started-at="2024-05-16T15:45:48 IST" name="startUp" finished-at="2024-05-16T15:45:52 IST" duration-ms="4830" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sorting/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="ToTestShoppingAndFeedsPositions()[pri:0, instance:tests.SortableTest@451001e5]" started-at="2024-05-16T15:45:52 IST" name="ToTestShoppingAndFeedsPositions" description="To verfiy if interchange of feed&#039;s And Shopping&#039;s position is possible " finished-at="2024-05-16T15:46:03 IST" duration-ms="10577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToTestShoppingAndFeedsPositions -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SortableTest@451001e5]" started-at="2024-05-16T15:46:03 IST" name="teardown" finished-at="2024-05-16T15:46:03 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SortableTest@451001e5]" started-at="2024-05-16T15:46:03 IST" name="tearEnd" finished-at="2024-05-16T15:46:03 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SortableTest -->
    </test> <!-- Sorting -->
  </suite> <!-- Suite -->
</testng-results>
