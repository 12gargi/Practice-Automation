<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="7" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-16T13:17:30 IST" name="Suite" finished-at="2024-05-16T13:20:02 IST" duration-ms="151480">
    <groups>
    </groups>
    <test started-at="2024-05-16T13:17:30 IST" name="Test1" finished-at="2024-05-16T13:17:46 IST" duration-ms="15530">
      <class name="tests.DialogBoxTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.DialogBoxTest@46cdf8bd]" started-at="2024-05-16T13:17:30 IST" name="beforeTest" finished-at="2024-05-16T13:17:31 IST" duration-ms="978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DialogBoxTest@46cdf8bd]" started-at="2024-05-16T13:17:31 IST" name="startUp" finished-at="2024-05-16T13:17:45 IST" duration-ms="13280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dialog-boxes/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="ToEnterdialogBox()[pri:0, instance:tests.DialogBoxTest@46cdf8bd]" started-at="2024-05-16T13:17:45 IST" name="ToEnterdialogBox" description="test to verify modal dialog box" finished-at="2024-05-16T13:17:45 IST" duration-ms="330" status="FAIL">
          <exception class="org.openqa.selenium.JavascriptException">
            <message>
              <![CDATA[javascript error: {"status":32,"value":"An invalid or illegal selector was specified"}
  (Session info: chrome-headless-shell=124.0.6367.208)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8bf4e1ea974042e87c9ec6264110f7f4, findElement {value=//button[@id='create-user'], using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61403}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61403/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8bf4e1ea974042e87c9ec6264110f7f4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.JavascriptException: javascript error: {"status":32,"value":"An invalid or illegal selector was specified"}
  (Session info: chrome-headless-shell=124.0.6367.208)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8bf4e1ea974042e87c9ec6264110f7f4, findElement {value=//button[@id='create-user'], using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61403}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61403/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8bf4e1ea974042e87c9ec6264110f7f4
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.click(Unknown Source)
at pageEvent.DialogBox.enterIntoDialogBox(DialogBox.java:53)
at tests.DialogBoxTest.ToEnterdialogBox(DialogBoxTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.JavascriptException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToEnterdialogBox -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DialogBoxTest@46cdf8bd]" started-at="2024-05-16T13:17:45 IST" name="tearDown" finished-at="2024-05-16T13:17:45 IST" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.DialogBoxTest@46cdf8bd]" started-at="2024-05-16T13:17:45 IST" name="tearEnd" finished-at="2024-05-16T13:17:46 IST" duration-ms="624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.DialogBoxTest -->
    </test> <!-- Test1 -->
    <test started-at="2024-05-16T13:17:46 IST" name="Test2" finished-at="2024-05-16T13:18:23 IST" duration-ms="36863">
      <class name="tests.AccordionTests">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.AccordionTests@4a83a74a]" started-at="2024-05-16T13:17:46 IST" name="beforeTest" finished-at="2024-05-16T13:17:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.AccordionTests@4a83a74a]" started-at="2024-05-16T13:17:46 IST" name="startUp" finished-at="2024-05-16T13:17:52 IST" duration-ms="6258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[accordion-and-tabs/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="verifyThatAccordionsAreWorking()[pri:0, instance:tests.AccordionTests@4a83a74a]" started-at="2024-05-16T13:17:52 IST" name="verifyThatAccordionsAreWorking" description="To verify That Accordions Are Working" finished-at="2024-05-16T13:18:22 IST" duration-ms="30330" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .demo-frame.lazyloaded' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .demo-frame.lazyloaded' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at pageEvent.AccordionsAndTabs.switchToAframe(AccordionsAndTabs.java:41)
at pageEvent.AccordionsAndTabs.accordionsIsWorking(AccordionsAndTabs.java:47)
at tests.AccordionTests.verifyThatAccordionsAreWorking(AccordionTests.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".demo-frame.lazyloaded"}
  (Session info: chrome-headless-shell=124.0.6367.208)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [382e431cda8fb237d3c173a05f52f33a, findElement {value=.demo-frame.lazyloaded, using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61444}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61444/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 382e431cda8fb237d3c173a05f52f33a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThatAccordionsAreWorking -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AccordionTests@4a83a74a]" started-at="2024-05-16T13:18:22 IST" name="tearDown" finished-at="2024-05-16T13:18:23 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.AccordionTests@4a83a74a]" started-at="2024-05-16T13:18:23 IST" name="tearEnd" finished-at="2024-05-16T13:18:23 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.AccordionTests -->
    </test> <!-- Test2 -->
    <test started-at="2024-05-16T13:18:23 IST" name="Test3" finished-at="2024-05-16T13:18:30 IST" duration-ms="6966">
      <class name="tests.DropDownTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.DropDownTest@d737b89]" started-at="2024-05-16T13:18:23 IST" name="beforeTest" finished-at="2024-05-16T13:18:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DropDownTest@d737b89]" started-at="2024-05-16T13:18:23 IST" name="startUp" finished-at="2024-05-16T13:18:28 IST" duration-ms="5396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[select-dropdown-menu/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testForDropDowselection()[pri:0, instance:tests.DropDownTest@d737b89]" started-at="2024-05-16T13:18:28 IST" name="testForDropDowselection" description="Test for Validation of DropDown" finished-at="2024-05-16T13:18:29 IST" duration-ms="1363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForDropDowselection -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DropDownTest@d737b89]" started-at="2024-05-16T13:18:29 IST" name="tearDown" finished-at="2024-05-16T13:18:30 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.DropDownTest@d737b89]" started-at="2024-05-16T13:18:30 IST" name="tearEnd" finished-at="2024-05-16T13:18:30 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.DropDownTest -->
    </test> <!-- Test3 -->
    <test started-at="2024-05-16T13:18:30 IST" name="Test4" finished-at="2024-05-16T13:19:16 IST" duration-ms="45810">
      <class name="tests.ProgressBarTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.ProgressBarTest@5afa3c9]" started-at="2024-05-16T13:18:30 IST" name="beforeTest" finished-at="2024-05-16T13:18:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ProgressBarTest@5afa3c9]" started-at="2024-05-16T13:18:30 IST" name="startUp" finished-at="2024-05-16T13:18:39 IST" duration-ms="8855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[progress-bar/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testFor100PercentCompletion()[pri:0, instance:tests.ProgressBarTest@5afa3c9]" started-at="2024-05-16T13:18:39 IST" name="testFor100PercentCompletion" description="test to verify ProgressBar completes 100%" finished-at="2024-05-16T13:19:09 IST" duration-ms="30528" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failed to complete progress bar to 100%]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failed to complete progress bar to 100%
at org.testng.Assert.fail(Assert.java:110)
at pageEvent.ProgressBar.ProgressBarcompletes100Percent(ProgressBar.java:70)
at tests.ProgressBarTest.testFor100PercentCompletion(ProgressBarTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFor100PercentCompletion -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ProgressBarTest@5afa3c9]" started-at="2024-05-16T13:19:09 IST" name="tearDown" finished-at="2024-05-16T13:19:09 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ProgressBarTest@5afa3c9]" started-at="2024-05-16T13:19:09 IST" name="startUp" finished-at="2024-05-16T13:19:15 IST" duration-ms="5728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[progress-bar/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testForProgressBarButton()[pri:0, instance:tests.ProgressBarTest@5afa3c9]" started-at="2024-05-16T13:19:15 IST" name="testForProgressBarButton" description="test to verify ProgressBar Start Download Button working" finished-at="2024-05-16T13:19:15 IST" duration-ms="366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForProgressBarButton -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ProgressBarTest@5afa3c9]" started-at="2024-05-16T13:19:15 IST" name="tearDown" finished-at="2024-05-16T13:19:15 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.ProgressBarTest@5afa3c9]" started-at="2024-05-16T13:19:15 IST" name="tearEnd" finished-at="2024-05-16T13:19:16 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.ProgressBarTest -->
    </test> <!-- Test4 -->
    <test started-at="2024-05-16T13:19:16 IST" name="Test5" finished-at="2024-05-16T13:19:21 IST" duration-ms="5680">
      <class name="tests.SliderTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SliderTest@413d1baf]" started-at="2024-05-16T13:19:16 IST" name="beforeTest" finished-at="2024-05-16T13:19:16 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SliderTest@413d1baf]" started-at="2024-05-16T13:19:16 IST" name="startUp" finished-at="2024-05-16T13:19:21 IST" duration-ms="5351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sliders/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="VerifyingSlidersAreWorking()[pri:0, instance:tests.SliderTest@413d1baf]" started-at="2024-05-16T13:19:21 IST" name="VerifyingSlidersAreWorking" description="Verifying Sliders Are Working" finished-at="2024-05-16T13:19:21 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyingSlidersAreWorking -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SliderTest@413d1baf]" started-at="2024-05-16T13:19:21 IST" name="tearDown" finished-at="2024-05-16T13:19:21 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SliderTest@413d1baf]" started-at="2024-05-16T13:19:21 IST" name="tearEnd" finished-at="2024-05-16T13:19:21 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SliderTest -->
    </test> <!-- Test5 -->
    <test started-at="2024-05-16T13:19:21 IST" name="Test6" finished-at="2024-05-16T13:19:31 IST" duration-ms="9595">
      <class name="tests.TabsAndWindowsTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.TabsAndWindowsTest@48bb62]" started-at="2024-05-16T13:19:21 IST" name="beforeTest" finished-at="2024-05-16T13:19:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.TabsAndWindowsTest@48bb62]" started-at="2024-05-16T13:19:21 IST" name="startUp" finished-at="2024-05-16T13:19:28 IST" duration-ms="6970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[frames-and-windows/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testToSwitchToOtherTab()[pri:0, instance:tests.TabsAndWindowsTest@48bb62]" started-at="2024-05-16T13:19:28 IST" name="testToSwitchToOtherTab" description="Test To Verify That After Clicking Button It Changes the Tab" finished-at="2024-05-16T13:19:31 IST" duration-ms="2446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSwitchToOtherTab -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TabsAndWindowsTest@48bb62]" started-at="2024-05-16T13:19:31 IST" name="tearDown" finished-at="2024-05-16T13:19:31 IST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.TabsAndWindowsTest@48bb62]" started-at="2024-05-16T13:19:31 IST" name="tearEnd" finished-at="2024-05-16T13:19:31 IST" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.TabsAndWindowsTest -->
    </test> <!-- Test6 -->
    <test started-at="2024-05-16T13:19:31 IST" name="Test7" finished-at="2024-05-16T13:19:38 IST" duration-ms="6742">
      <class name="tests.ToolTipTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.ToolTipTest@14028087]" started-at="2024-05-16T13:19:31 IST" name="beforeTest" finished-at="2024-05-16T13:19:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ToolTipTest@14028087]" started-at="2024-05-16T13:19:31 IST" name="startUp" finished-at="2024-05-16T13:19:36 IST" duration-ms="5302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tooltip/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testToVerifyTooltipFunctionality()[pri:0, instance:tests.ToolTipTest@14028087]" started-at="2024-05-16T13:19:36 IST" name="testToVerifyTooltipFunctionality" description="test to verify whether the tooltip works fine" finished-at="2024-05-16T13:19:37 IST" duration-ms="1262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToVerifyTooltipFunctionality -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ToolTipTest@14028087]" started-at="2024-05-16T13:19:37 IST" name="tearDown" finished-at="2024-05-16T13:19:38 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.ToolTipTest@14028087]" started-at="2024-05-16T13:19:38 IST" name="tearEnd" finished-at="2024-05-16T13:19:38 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.ToolTipTest -->
    </test> <!-- Test7 -->
    <test started-at="2024-05-16T13:19:38 IST" name="Test8" finished-at="2024-05-16T13:19:46 IST" duration-ms="8201">
      <class name="tests.SelectElementsTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SelectElementsTest@268f106e]" started-at="2024-05-16T13:19:38 IST" name="beforeTest" finished-at="2024-05-16T13:19:38 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SelectElementsTest@268f106e]" started-at="2024-05-16T13:19:38 IST" name="startUp" finished-at="2024-05-16T13:19:45 IST" duration-ms="7666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[select-elements/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyMultipleSelect()[pri:0, instance:tests.SelectElementsTest@268f106e]" started-at="2024-05-16T13:19:45 IST" name="toVerifyMultipleSelect" description=" To Verify that it can select Multiple Element " finished-at="2024-05-16T13:19:46 IST" duration-ms="373" status="FAIL">
          <exception class="org.openqa.selenium.interactions.MoveTargetOutOfBoundsException">
            <message>
              <![CDATA[move target out of bounds
  (Session info: chrome-headless-shell=124.0.6367.208)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c04db58bd76c6f2c4ac4c722b7f75039, actions {actions=[org.openqa.selenium.interactions.Sequence@b5c902, org.openqa.selenium.interactions.Sequence@7e747037]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61817}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61817/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c04db58bd76c6f2c4ac4c722b7f75039]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: move target out of bounds
  (Session info: chrome-headless-shell=124.0.6367.208)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c04db58bd76c6f2c4ac4c722b7f75039, actions {actions=[org.openqa.selenium.interactions.Sequence@b5c902, org.openqa.selenium.interactions.Sequence@7e747037]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61817}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61817/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c04db58bd76c6f2c4ac4c722b7f75039
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:605)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:603)
at org.openqa.selenium.interactions.Actions.perform(Actions.java:568)
at pageEvent.SelectElements.toSelectMutiEelement(SelectElements.java:57)
at tests.SelectElementsTest.toVerifyMultipleSelect(SelectElementsTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.interactions.MoveTargetOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyMultipleSelect -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SelectElementsTest@268f106e]" started-at="2024-05-16T13:19:46 IST" name="tearDown" finished-at="2024-05-16T13:19:46 IST" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SelectElementsTest@268f106e]" started-at="2024-05-16T13:19:46 IST" name="tearEnd" finished-at="2024-05-16T13:19:46 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SelectElementsTest -->
    </test> <!-- Test8 -->
    <test started-at="2024-05-16T13:19:46 IST" name="Test9" finished-at="2024-05-16T13:19:55 IST" duration-ms="9510">
      <class name="tests.SpinnerTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SpinnerTest@231f98ef]" started-at="2024-05-16T13:19:46 IST" name="beforeTest" finished-at="2024-05-16T13:19:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SpinnerTest@231f98ef]" started-at="2024-05-16T13:19:46 IST" name="startUp" finished-at="2024-05-16T13:19:54 IST" duration-ms="8107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[spinner/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="ToVerifySpinner()[pri:0, instance:tests.SpinnerTest@231f98ef]" started-at="2024-05-16T13:19:54 IST" name="ToVerifySpinner" description="To verify wether Spinner works as expected" finished-at="2024-05-16T13:19:55 IST" duration-ms="1343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifySpinner -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SpinnerTest@231f98ef]" started-at="2024-05-16T13:19:55 IST" name="tearDown" finished-at="2024-05-16T13:19:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SpinnerTest@231f98ef]" started-at="2024-05-16T13:19:55 IST" name="tearEnd" finished-at="2024-05-16T13:19:55 IST" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SpinnerTest -->
    </test> <!-- Test9 -->
    <test started-at="2024-05-16T13:19:55 IST" name="Test10" finished-at="2024-05-16T13:20:02 IST" duration-ms="6427">
      <class name="tests.SortableTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SortableTest@3e08ff24]" started-at="2024-05-16T13:19:55 IST" name="beforeTest" finished-at="2024-05-16T13:19:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SortableTest@3e08ff24]" started-at="2024-05-16T13:19:55 IST" name="startUp" finished-at="2024-05-16T13:20:01 IST" duration-ms="5595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sorting/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="ToTestShoppingAndFeedsPositions()[pri:0, instance:tests.SortableTest@3e08ff24]" started-at="2024-05-16T13:20:01 IST" name="ToTestShoppingAndFeedsPositions" description="To verfiy if interchange of feed&#039;s And Shopping&#039;s position is possible " finished-at="2024-05-16T13:20:01 IST" duration-ms="551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToTestShoppingAndFeedsPositions -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SortableTest@3e08ff24]" started-at="2024-05-16T13:20:01 IST" name="tearDown" finished-at="2024-05-16T13:20:02 IST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SortableTest@3e08ff24]" started-at="2024-05-16T13:20:02 IST" name="tearEnd" finished-at="2024-05-16T13:20:02 IST" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SortableTest -->
    </test> <!-- Test10 -->
  </suite> <!-- Suite -->
</testng-results>
