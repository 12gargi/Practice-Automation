<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="33" passed="24" failed="9" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-23T13:55:51 IST" name="Suite" finished-at="2024-05-23T14:01:49 IST" duration-ms="357393">
    <groups>
    </groups>
    <test started-at="2024-05-23T13:55:51 IST" name="DialogBox" finished-at="2024-05-23T13:56:19 IST" duration-ms="27375">
      <class name="tests.DialogBoxTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.DialogBoxTest@26d9b808]" started-at="2024-05-23T13:55:51 IST" name="beforeTest" finished-at="2024-05-23T13:55:52 IST" duration-ms="1079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DialogBoxTest@26d9b808]" started-at="2024-05-23T13:55:52 IST" name="startUp" finished-at="2024-05-23T13:56:08 IST" duration-ms="15201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/dialog-boxes/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="ToEnterdialogBox()[pri:0, instance:tests.DialogBoxTest@26d9b808]" started-at="2024-05-23T13:56:08 IST" name="ToEnterdialogBox" description="test to verify modal dialog box" finished-at="2024-05-23T13:56:18 IST" duration-ms="10207" status="FAIL">
          <exception class="org.openqa.selenium.JavascriptException">
            <message>
              <![CDATA[javascript error: {"status":32,"value":"An invalid or illegal selector was specified"}
  (Session info: chrome-headless-shell=124.0.6367.210)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c381e2422df9e495cd222115e06f8d6a, findElement {value=//div[@class='single_tab_div resp-tab-content resp-tab-content-active']//iframe[@class='demo-frame lazyloaded'], using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.210, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63283}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63283/devtoo..., se:cdpVersion: 124.0.6367.210, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c381e2422df9e495cd222115e06f8d6a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.JavascriptException: javascript error: {"status":32,"value":"An invalid or illegal selector was specified"}
  (Session info: chrome-headless-shell=124.0.6367.210)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c381e2422df9e495cd222115e06f8d6a, findElement {value=//div[@class='single_tab_div resp-tab-content resp-tab-content-active']//iframe[@class='demo-frame lazyloaded'], using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.210, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63283}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63283/devtoo..., se:cdpVersion: 124.0.6367.210, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c381e2422df9e495cd222115e06f8d6a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.frame(RemoteWebDriver.java:1105)
at pageEvent.DialogBox.enterIntoDialogBox(DialogBox.java:58)
at tests.DialogBoxTest.ToEnterdialogBox(DialogBoxTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.JavascriptException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToEnterdialogBox -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.DialogBoxTest@26d9b808]" started-at="2024-05-23T13:56:18 IST" name="teardown" finished-at="2024-05-23T13:56:18 IST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.DialogBoxTest@26d9b808]" started-at="2024-05-23T13:56:18 IST" name="tearEnd" finished-at="2024-05-23T13:56:19 IST" duration-ms="596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.DialogBoxTest -->
    </test> <!-- DialogBox -->
    <test started-at="2024-05-23T13:56:19 IST" name="Accordions" finished-at="2024-05-23T13:57:00 IST" duration-ms="41220">
      <class name="tests.AccordionTests">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.AccordionTests@4b29d1d2]" started-at="2024-05-23T13:56:19 IST" name="beforeTest" finished-at="2024-05-23T13:56:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.AccordionTests@4b29d1d2]" started-at="2024-05-23T13:56:19 IST" name="startUp" finished-at="2024-05-23T13:56:25 IST" duration-ms="5755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/accordion-and-tabs/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="verifyThatAccordionsAreWorking()[pri:0, instance:tests.AccordionTests@4b29d1d2]" started-at="2024-05-23T13:56:25 IST" name="verifyThatAccordionsAreWorking" description="To verify That Accordions Are Working" finished-at="2024-05-23T13:57:00 IST" duration-ms="35219" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":".demo-frame.lazyloaded"}
  (Session info: chrome-headless-shell=124.0.6367.210)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d671d18dc6019bc931cf64c51e5cf4da, findElement {value=.demo-frame.lazyloaded, using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.210, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63337}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63337/devtoo..., se:cdpVersion: 124.0.6367.210, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d671d18dc6019bc931cf64c51e5cf4da]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".demo-frame.lazyloaded"}
  (Session info: chrome-headless-shell=124.0.6367.210)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d671d18dc6019bc931cf64c51e5cf4da, findElement {value=.demo-frame.lazyloaded, using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.210, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63337}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63337/devtoo..., se:cdpVersion: 124.0.6367.210, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d671d18dc6019bc931cf64c51e5cf4da
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.frame(RemoteWebDriver.java:1105)
at pageEvent.AccordionsAndTabs.switchToAframe(AccordionsAndTabs.java:45)
at pageEvent.AccordionsAndTabs.accordionsIsWorking(AccordionsAndTabs.java:52)
at tests.AccordionTests.verifyThatAccordionsAreWorking(AccordionTests.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThatAccordionsAreWorking -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.AccordionTests@4b29d1d2]" started-at="2024-05-23T13:57:00 IST" name="teardown" finished-at="2024-05-23T13:57:00 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.AccordionTests@4b29d1d2]" started-at="2024-05-23T13:57:00 IST" name="tearEnd" finished-at="2024-05-23T13:57:00 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.AccordionTests -->
    </test> <!-- Accordions -->
    <test started-at="2024-05-23T13:57:00 IST" name="Dropdown" finished-at="2024-05-23T13:57:08 IST" duration-ms="8339">
      <class name="tests.DropDownTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.DropDownTest@35dab4eb]" started-at="2024-05-23T13:57:00 IST" name="beforeTest" finished-at="2024-05-23T13:57:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DropDownTest@35dab4eb]" started-at="2024-05-23T13:57:00 IST" name="startUp" finished-at="2024-05-23T13:57:05 IST" duration-ms="4739" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/select-dropdown-menu/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testForDropDowselection()[pri:0, instance:tests.DropDownTest@35dab4eb]" started-at="2024-05-23T13:57:05 IST" name="testForDropDowselection" description="Test for Validation of DropDown" finished-at="2024-05-23T13:57:08 IST" duration-ms="3364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForDropDowselection -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.DropDownTest@35dab4eb]" started-at="2024-05-23T13:57:08 IST" name="teardown" finished-at="2024-05-23T13:57:08 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.DropDownTest@35dab4eb]" started-at="2024-05-23T13:57:08 IST" name="tearEnd" finished-at="2024-05-23T13:57:08 IST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.DropDownTest -->
    </test> <!-- Dropdown -->
    <test started-at="2024-05-23T13:57:08 IST" name="ProgressBar" finished-at="2024-05-23T13:58:12 IST" duration-ms="63095">
      <class name="tests.ProgressBarTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.ProgressBarTest@909217e]" started-at="2024-05-23T13:57:08 IST" name="beforeTest" finished-at="2024-05-23T13:57:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ProgressBarTest@909217e]" started-at="2024-05-23T13:57:08 IST" name="startUp" finished-at="2024-05-23T13:57:15 IST" duration-ms="6591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/progress-bar/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testFor100PercentCompletion()[pri:0, instance:tests.ProgressBarTest@909217e]" started-at="2024-05-23T13:57:15 IST" name="testFor100PercentCompletion" description="test to verify ProgressBar completes 100%" finished-at="2024-05-23T13:57:56 IST" duration-ms="40605" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failed to complete progress bar to 100%]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failed to complete progress bar to 100%
at org.testng.Assert.fail(Assert.java:110)
at pageEvent.ProgressBar.ProgressBarcompletes100Percent(ProgressBar.java:80)
at tests.ProgressBarTest.testFor100PercentCompletion(ProgressBarTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFor100PercentCompletion -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ProgressBarTest@909217e]" started-at="2024-05-23T13:57:56 IST" name="teardown" finished-at="2024-05-23T13:57:56 IST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ProgressBarTest@909217e]" started-at="2024-05-23T13:57:56 IST" name="startUp" finished-at="2024-05-23T13:58:01 IST" duration-ms="5162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/progress-bar/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testForProgressBarButton()[pri:0, instance:tests.ProgressBarTest@909217e]" started-at="2024-05-23T13:58:01 IST" name="testForProgressBarButton" description="test to verify ProgressBar Start Download Button working" finished-at="2024-05-23T13:58:11 IST" duration-ms="10336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForProgressBarButton -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ProgressBarTest@909217e]" started-at="2024-05-23T13:58:11 IST" name="teardown" finished-at="2024-05-23T13:58:11 IST" duration-ms="157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.ProgressBarTest@909217e]" started-at="2024-05-23T13:58:11 IST" name="tearEnd" finished-at="2024-05-23T13:58:12 IST" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.ProgressBarTest -->
    </test> <!-- ProgressBar -->
    <test started-at="2024-05-23T13:58:12 IST" name="Sliders" finished-at="2024-05-23T13:58:20 IST" duration-ms="8823">
      <class name="tests.SliderTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SliderTest@16eb3ea3]" started-at="2024-05-23T13:58:12 IST" name="beforeTest" finished-at="2024-05-23T13:58:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SliderTest@16eb3ea3]" started-at="2024-05-23T13:58:12 IST" name="startUp" finished-at="2024-05-23T13:58:18 IST" duration-ms="6464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/sliders/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="VerifyingSlidersAreWorking()[pri:0, instance:tests.SliderTest@16eb3ea3]" started-at="2024-05-23T13:58:18 IST" name="VerifyingSlidersAreWorking" description="Verifying Sliders Are Working" finished-at="2024-05-23T13:58:20 IST" duration-ms="2158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyingSlidersAreWorking -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SliderTest@16eb3ea3]" started-at="2024-05-23T13:58:20 IST" name="teardown" finished-at="2024-05-23T13:58:20 IST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SliderTest@16eb3ea3]" started-at="2024-05-23T13:58:20 IST" name="tearEnd" finished-at="2024-05-23T13:58:20 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SliderTest -->
    </test> <!-- Sliders -->
    <test started-at="2024-05-23T13:58:20 IST" name="Frames_Windows" finished-at="2024-05-23T13:58:28 IST" duration-ms="7731">
      <class name="tests.TabsAndWindowsTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.TabsAndWindowsTest@353352b6]" started-at="2024-05-23T13:58:20 IST" name="beforeTest" finished-at="2024-05-23T13:58:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.TabsAndWindowsTest@353352b6]" started-at="2024-05-23T13:58:20 IST" name="startUp" finished-at="2024-05-23T13:58:25 IST" duration-ms="4188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/frames-and-windows/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testToSwitchToOtherTab()[pri:0, instance:tests.TabsAndWindowsTest@353352b6]" started-at="2024-05-23T13:58:25 IST" name="testToSwitchToOtherTab" description="Test To Verify That After Clicking Button It Changes the Tab" finished-at="2024-05-23T13:58:28 IST" duration-ms="3361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSwitchToOtherTab -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.TabsAndWindowsTest@353352b6]" started-at="2024-05-23T13:58:28 IST" name="teardown" finished-at="2024-05-23T13:58:28 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.TabsAndWindowsTest@353352b6]" started-at="2024-05-23T13:58:28 IST" name="tearEnd" finished-at="2024-05-23T13:58:28 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.TabsAndWindowsTest -->
    </test> <!-- Frames_Windows -->
    <test started-at="2024-05-23T13:58:28 IST" name="Tooltip" finished-at="2024-05-23T13:58:35 IST" duration-ms="6400">
      <class name="tests.ToolTipTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.ToolTipTest@cecf639]" started-at="2024-05-23T13:58:28 IST" name="beforeTest" finished-at="2024-05-23T13:58:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ToolTipTest@cecf639]" started-at="2024-05-23T13:58:28 IST" name="startUp" finished-at="2024-05-23T13:58:32 IST" duration-ms="3748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/tooltip/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testToVerifyTooltipFunctionality()[pri:0, instance:tests.ToolTipTest@cecf639]" started-at="2024-05-23T13:58:32 IST" name="testToVerifyTooltipFunctionality" description="test to verify whether the tooltip works fine" finished-at="2024-05-23T13:58:34 IST" duration-ms="2466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToVerifyTooltipFunctionality -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ToolTipTest@cecf639]" started-at="2024-05-23T13:58:34 IST" name="teardown" finished-at="2024-05-23T13:58:35 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.ToolTipTest@cecf639]" started-at="2024-05-23T13:58:35 IST" name="tearEnd" finished-at="2024-05-23T13:58:35 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.ToolTipTest -->
    </test> <!-- Tooltip -->
    <test started-at="2024-05-23T13:58:35 IST" name="MultipleElements" finished-at="2024-05-23T13:58:50 IST" duration-ms="15138">
      <class name="tests.SelectElementsTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SelectElementsTest@6e9a5ed8]" started-at="2024-05-23T13:58:35 IST" name="beforeTest" finished-at="2024-05-23T13:58:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SelectElementsTest@6e9a5ed8]" started-at="2024-05-23T13:58:35 IST" name="startUp" finished-at="2024-05-23T13:58:39 IST" duration-ms="4610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/select-elements/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyMultipleSelect()[pri:0, instance:tests.SelectElementsTest@6e9a5ed8]" started-at="2024-05-23T13:58:39 IST" name="toVerifyMultipleSelect" description=" To Verify that it can select Multiple Element " finished-at="2024-05-23T13:58:50 IST" duration-ms="10371" status="FAIL">
          <exception class="org.openqa.selenium.interactions.MoveTargetOutOfBoundsException">
            <message>
              <![CDATA[move target out of bounds
  (Session info: chrome-headless-shell=124.0.6367.210)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a7e891db6e8cd76cc03602339661fd23, actions {actions=[org.openqa.selenium.interactions.Sequence@787d1f9c, org.openqa.selenium.interactions.Sequence@2becfd4c]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.210, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63695}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63695/devtoo..., se:cdpVersion: 124.0.6367.210, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a7e891db6e8cd76cc03602339661fd23]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: move target out of bounds
  (Session info: chrome-headless-shell=124.0.6367.210)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a7e891db6e8cd76cc03602339661fd23, actions {actions=[org.openqa.selenium.interactions.Sequence@787d1f9c, org.openqa.selenium.interactions.Sequence@2becfd4c]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.210, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63695}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63695/devtoo..., se:cdpVersion: 124.0.6367.210, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a7e891db6e8cd76cc03602339661fd23
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:605)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:603)
at org.openqa.selenium.interactions.Actions.perform(Actions.java:568)
at pageEvent.SelectElements.toSelectMutiEelement(SelectElements.java:55)
at tests.SelectElementsTest.toVerifyMultipleSelect(SelectElementsTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.interactions.MoveTargetOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyMultipleSelect -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SelectElementsTest@6e9a5ed8]" started-at="2024-05-23T13:58:50 IST" name="teardown" finished-at="2024-05-23T13:58:50 IST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SelectElementsTest@6e9a5ed8]" started-at="2024-05-23T13:58:50 IST" name="tearEnd" finished-at="2024-05-23T13:58:50 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SelectElementsTest -->
    </test> <!-- MultipleElements -->
    <test started-at="2024-05-23T13:58:50 IST" name="Spinner" finished-at="2024-05-23T13:58:58 IST" duration-ms="8178">
      <class name="tests.SpinnerTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SpinnerTest@7c137fd5]" started-at="2024-05-23T13:58:50 IST" name="beforeTest" finished-at="2024-05-23T13:58:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SpinnerTest@7c137fd5]" started-at="2024-05-23T13:58:50 IST" name="startUp" finished-at="2024-05-23T13:58:55 IST" duration-ms="4989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/spinner/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="ToVerifySpinner()[pri:0, instance:tests.SpinnerTest@7c137fd5]" started-at="2024-05-23T13:58:55 IST" name="ToVerifySpinner" description="To verify wether Spinner works as expected" finished-at="2024-05-23T13:58:58 IST" duration-ms="3136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifySpinner -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SpinnerTest@7c137fd5]" started-at="2024-05-23T13:58:58 IST" name="teardown" finished-at="2024-05-23T13:58:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SpinnerTest@7c137fd5]" started-at="2024-05-23T13:58:58 IST" name="tearEnd" finished-at="2024-05-23T13:58:58 IST" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SpinnerTest -->
    </test> <!-- Spinner -->
    <test started-at="2024-05-23T13:58:58 IST" name="Sorting" finished-at="2024-05-23T13:59:05 IST" duration-ms="7510">
      <class name="tests.SortableTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SortableTest@4d1c005e]" started-at="2024-05-23T13:58:58 IST" name="beforeTest" finished-at="2024-05-23T13:58:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SortableTest@4d1c005e]" started-at="2024-05-23T13:58:58 IST" name="startUp" finished-at="2024-05-23T13:59:03 IST" duration-ms="4671" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/sorting/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="ToTestShoppingAndFeedsPositions()[pri:0, instance:tests.SortableTest@4d1c005e]" started-at="2024-05-23T13:59:03 IST" name="ToTestShoppingAndFeedsPositions" description="To verfiy if interchange of feed&#039;s And Shopping&#039;s position is possible " finished-at="2024-05-23T13:59:05 IST" duration-ms="2631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToTestShoppingAndFeedsPositions -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SortableTest@4d1c005e]" started-at="2024-05-23T13:59:05 IST" name="teardown" finished-at="2024-05-23T13:59:05 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SortableTest@4d1c005e]" started-at="2024-05-23T13:59:05 IST" name="tearEnd" finished-at="2024-05-23T13:59:05 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SortableTest -->
    </test> <!-- Sorting -->
    <test started-at="2024-05-23T13:59:05 IST" name="Toolbar" finished-at="2024-05-23T13:59:32 IST" duration-ms="26298">
      <class name="tests.ToolBarTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:05 IST" name="beforeTest" finished-at="2024-05-23T13:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:05 IST" name="startUp" finished-at="2024-05-23T13:59:13 IST" duration-ms="7596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/toolbar/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="verifyPrintButtonMessage()[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:13 IST" name="verifyPrintButtonMessage" description="to verify the hovered message of a Print Button" finished-at="2024-05-23T13:59:13 IST" duration-ms="411" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Print] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Print] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at pageEvent.Toolbar.printMessage(Toolbar.java:60)
at tests.ToolBarTest.verifyPrintButtonMessage(ToolBarTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrintButtonMessage -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:13 IST" name="teardown" finished-at="2024-05-23T13:59:14 IST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:14 IST" name="startUp" finished-at="2024-05-23T13:59:18 IST" duration-ms="4227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/toolbar/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="verifyRedoButtonMessage()[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:18 IST" name="verifyRedoButtonMessage" description="to verify the hovered message of a Redo Button" finished-at="2024-05-23T13:59:18 IST" duration-ms="374" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Redo] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Redo] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at pageEvent.Toolbar.redoMessage(Toolbar.java:71)
at tests.ToolBarTest.verifyRedoButtonMessage(ToolBarTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRedoButtonMessage -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:18 IST" name="teardown" finished-at="2024-05-23T13:59:18 IST" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:18 IST" name="startUp" finished-at="2024-05-23T13:59:23 IST" duration-ms="5005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/toolbar/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="verifyUndoButtonMessage()[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:23 IST" name="verifyUndoButtonMessage" description="to verify the hovered message of a Undo Button" finished-at="2024-05-23T13:59:24 IST" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUndoButtonMessage -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:24 IST" name="teardown" finished-at="2024-05-23T13:59:24 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:24 IST" name="startUp" finished-at="2024-05-23T13:59:29 IST" duration-ms="4666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/toolbar/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="verifyZoomDropdown()[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:29 IST" name="verifyZoomDropdown" description="to verify zoom dropdown works as expected" finished-at="2024-05-23T13:59:32 IST" duration-ms="2998" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [90%] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [90%] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at pageEvent.Toolbar.zoomDropdown(Toolbar.java:98)
at tests.ToolBarTest.verifyZoomDropdown(ToolBarTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyZoomDropdown -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:32 IST" name="teardown" finished-at="2024-05-23T13:59:32 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.ToolBarTest@247310d0]" started-at="2024-05-23T13:59:32 IST" name="tearEnd" finished-at="2024-05-23T13:59:32 IST" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.ToolBarTest -->
    </test> <!-- Toolbar -->
    <test started-at="2024-05-23T13:59:32 IST" name="DatePicker" finished-at="2024-05-23T13:59:46 IST" duration-ms="13773">
      <class name="tests.DatepickerTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.DatepickerTest@2b30a42c]" started-at="2024-05-23T13:59:32 IST" name="beforeTest" finished-at="2024-05-23T13:59:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DatepickerTest@2b30a42c]" started-at="2024-05-23T13:59:32 IST" name="startUp" finished-at="2024-05-23T13:59:36 IST" duration-ms="4698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/datepicker/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testdatepicker()[pri:0, instance:tests.DatepickerTest@2b30a42c]" started-at="2024-05-23T13:59:36 IST" name="testdatepicker" description="test to pick date from datepicker" finished-at="2024-05-23T13:59:45 IST" duration-ms="8880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testdatepicker -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.DatepickerTest@2b30a42c]" started-at="2024-05-23T13:59:45 IST" name="teardown" finished-at="2024-05-23T13:59:45 IST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.DatepickerTest@2b30a42c]" started-at="2024-05-23T13:59:45 IST" name="tearEnd" finished-at="2024-05-23T13:59:46 IST" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.DatepickerTest -->
    </test> <!-- DatePicker -->
    <test started-at="2024-05-23T13:59:46 IST" name="DragAndDrop" finished-at="2024-05-23T14:00:25 IST" duration-ms="39379">
      <class name="tests.DragAndDropTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T13:59:46 IST" name="beforeTest" finished-at="2024-05-23T13:59:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T13:59:46 IST" name="startUp" finished-at="2024-05-23T13:59:52 IST" duration-ms="6421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/draganddrop/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testForAlltoDragAndDrop()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T13:59:52 IST" name="testForAlltoDragAndDrop" description="to verify drag and drop works as expected" finished-at="2024-05-23T13:59:55 IST" duration-ms="3483" status="FAIL">
          <exception class="org.openqa.selenium.json.JsonException">
            <message>
              <![CDATA[java.lang.reflect.InvocationTargetException
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [27cb96f8d6785cc3c3fa1d82db87b655, actions {actions=[org.openqa.selenium.interactions.Sequence@563ada5]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.210, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64081}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64081/devtoo..., se:cdpVersion: 124.0.6367.210, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 27cb96f8d6785cc3c3fa1d82db87b655]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.json.JsonException: java.lang.reflect.InvocationTargetException
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [27cb96f8d6785cc3c3fa1d82db87b655, actions {actions=[org.openqa.selenium.interactions.Sequence@563ada5]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.210, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64081}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64081/devtoo..., se:cdpVersion: 124.0.6367.210, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 27cb96f8d6785cc3c3fa1d82db87b655
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:520)
at org.openqa.selenium.json.JsonOutput.lambda$new$16(JsonOutput.java:182)
at org.openqa.selenium.json.JsonOutput.write0(JsonOutput.java:409)
at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:204)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
at org.openqa.selenium.json.JsonOutput.lambda$new$23(JsonOutput.java:204)
at org.openqa.selenium.json.JsonOutput.write0(JsonOutput.java:409)
at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:222)
at java.base/java.util.Map.forEach(Map.java:713)
at org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:217)
at org.openqa.selenium.json.JsonOutput.write0(JsonOutput.java:409)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:400)
at org.openqa.selenium.json.Json.toJson(Json.java:133)
at org.openqa.selenium.json.Json.toJson(Json.java:119)
at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:245)
at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:111)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:178)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:605)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:603)
at pageEvent.DragAndDrop.testForAllToDragInTrash(DragAndDrop.java:123)
at tests.DragAndDropTest.testForAlltoDragAndDrop(DragAndDropTest.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Suppressed: org.openqa.selenium.json.JsonException: Attempting to close incomplete json stream
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.json.JsonOutput.close(JsonOutput.java:431)
at org.openqa.selenium.json.Json.toJson(Json.java:131)
... 39 more
Caused by: java.lang.reflect.InvocationTargetException
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:516)
... 60 more
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='gallery']/li[4]"}
  (Session info: chrome-headless-shell=124.0.6367.210)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [27cb96f8d6785cc3c3fa1d82db87b655, findElement {value=//*[@id='gallery']/li[4], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.210, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64081}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64081/devtoo..., se:cdpVersion: 124.0.6367.210, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 27cb96f8d6785cc3c3fa1d82db87b655
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.getWrappedElement(Unknown Source)
at org.openqa.selenium.interactions.PointerInput$Origin.asArg(PointerInput.java:259)
at org.openqa.selenium.interactions.PointerInput$Move.encode(PointerInput.java:208)
at org.openqa.selenium.interactions.Sequence.encode(Sequence.java:72)
at org.openqa.selenium.interactions.Sequence.toJson(Sequence.java:81)
... 65 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.json.JsonException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForAlltoDragAndDrop -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T13:59:55 IST" name="teardown" finished-at="2024-05-23T13:59:56 IST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T13:59:56 IST" name="startUp" finished-at="2024-05-23T14:00:00 IST" duration-ms="3948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/draganddrop/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testForSecondtoDragAndDrop()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:00 IST" name="testForSecondtoDragAndDrop" description="to verify drag and drop on Second image " finished-at="2024-05-23T14:00:06 IST" duration-ms="6082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForSecondtoDragAndDrop -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:06 IST" name="teardown" finished-at="2024-05-23T14:00:06 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:06 IST" name="startUp" finished-at="2024-05-23T14:00:10 IST" duration-ms="4618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/draganddrop/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testForThirdtoDragAndDrop()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:10 IST" name="testForThirdtoDragAndDrop" description="to verify drag and drop on Third image " finished-at="2024-05-23T14:00:12 IST" duration-ms="1879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForThirdtoDragAndDrop -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:12 IST" name="teardown" finished-at="2024-05-23T14:00:12 IST" duration-ms="161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:12 IST" name="startUp" finished-at="2024-05-23T14:00:17 IST" duration-ms="4404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/draganddrop/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testForfirsttoDragAndDrop()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:17 IST" name="testForfirsttoDragAndDrop" description="to verify drag and drop on first image " finished-at="2024-05-23T14:00:19 IST" duration-ms="1830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForfirsttoDragAndDrop -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:19 IST" name="teardown" finished-at="2024-05-23T14:00:19 IST" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:19 IST" name="startUp" finished-at="2024-05-23T14:00:24 IST" duration-ms="5425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/draganddrop/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testForforthtoDragAndDrop()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:24 IST" name="testForforthtoDragAndDrop" description="to verify drag and drop on first image " finished-at="2024-05-23T14:00:25 IST" duration-ms="542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForforthtoDragAndDrop -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:25 IST" name="teardown" finished-at="2024-05-23T14:00:25 IST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.DragAndDropTest@302c971f]" started-at="2024-05-23T14:00:25 IST" name="tearEnd" finished-at="2024-05-23T14:00:25 IST" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.DragAndDropTest -->
    </test> <!-- DragAndDrop -->
    <test started-at="2024-05-23T14:00:25 IST" name="DraggableBox" finished-at="2024-05-23T14:00:47 IST" duration-ms="22573">
      <class name="tests.DraggableBoxTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.DraggableBoxTest@433defed]" started-at="2024-05-23T14:00:25 IST" name="beforeTest" finished-at="2024-05-23T14:00:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.DraggableBoxTest@433defed]" started-at="2024-05-23T14:00:25 IST" name="startUp" finished-at="2024-05-23T14:00:32 IST" duration-ms="7334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo-site/draganddrop/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="testforDraggableBox()[pri:0, instance:tests.DraggableBoxTest@433defed]" started-at="2024-05-23T14:00:32 IST" name="testforDraggableBox" description="to verify whether the box movable" finished-at="2024-05-23T14:00:47 IST" duration-ms="15065" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//div[@id='draggable'])[1]"}
  (Session info: chrome-headless-shell=124.0.6367.210)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [49ef6abf05f11bf308fb2382a3374232, findElement {value=(//div[@id='draggable'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.210, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64302}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64302/devtoo..., se:cdpVersion: 124.0.6367.210, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 49ef6abf05f11bf308fb2382a3374232]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[@id='draggable'])[1]"}
  (Session info: chrome-headless-shell=124.0.6367.210)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [49ef6abf05f11bf308fb2382a3374232, findElement {value=(//div[@id='draggable'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 124.0.6367.210, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: C:\Users\TESTRIG\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64302}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64302/devtoo..., se:cdpVersion: 124.0.6367.210, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 49ef6abf05f11bf308fb2382a3374232
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.getText(Unknown Source)
at pageEvent.DraggableBox.testDraggableBox(DraggableBox.java:43)
at tests.DraggableBoxTest.testforDraggableBox(DraggableBoxTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testforDraggableBox -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.DraggableBoxTest@433defed]" started-at="2024-05-23T14:00:47 IST" name="teardown" finished-at="2024-05-23T14:00:47 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.DraggableBoxTest@433defed]" started-at="2024-05-23T14:00:47 IST" name="tearEnd" finished-at="2024-05-23T14:00:47 IST" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.DraggableBoxTest -->
    </test> <!-- DraggableBox -->
    <test started-at="2024-05-23T14:00:48 IST" name="SampleTest" finished-at="2024-05-23T14:01:49 IST" duration-ms="61229">
      <class name="tests.SampletestTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:00:48 IST" name="beforeTest" finished-at="2024-05-23T14:00:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:00:48 IST" name="startUp" finished-at="2024-05-23T14:00:52 IST" duration-ms="4643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samplepagetest/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toEnterDetails()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:00:52 IST" name="toEnterDetails" description="to verify the input functionality of Name , Email and Website" finished-at="2024-05-23T14:00:53 IST" duration-ms="426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toEnterDetails -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:00:53 IST" name="teardown" finished-at="2024-05-23T14:00:53 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:00:53 IST" name="startUp" finished-at="2024-05-23T14:00:57 IST" duration-ms="4300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samplepagetest/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyAlert()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:00:57 IST" name="toVerifyAlert" description="to verify Alert" finished-at="2024-05-23T14:00:57 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyAlert -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:00:57 IST" name="teardown" finished-at="2024-05-23T14:00:57 IST" duration-ms="162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:00:57 IST" name="startUp" finished-at="2024-05-23T14:01:02 IST" duration-ms="4398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samplepagetest/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyAll()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:02 IST" name="toVerifyAll" description="to verify the whole form" finished-at="2024-05-23T14:01:08 IST" duration-ms="6306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyAll -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:08 IST" name="teardown" finished-at="2024-05-23T14:01:08 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:08 IST" name="startUp" finished-at="2024-05-23T14:01:13 IST" duration-ms="5015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samplepagetest/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyAutomationCheckbox()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:13 IST" name="toVerifyAutomationCheckbox" description="to verify the Automation Checkbox functionality" finished-at="2024-05-23T14:01:13 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyAutomationCheckbox -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:13 IST" name="teardown" finished-at="2024-05-23T14:01:13 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:13 IST" name="startUp" finished-at="2024-05-23T14:01:17 IST" duration-ms="3855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samplepagetest/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyComment()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:17 IST" name="toVerifyComment" description="to verify comment Accepts Text" finished-at="2024-05-23T14:01:18 IST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyComment -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:18 IST" name="teardown" finished-at="2024-05-23T14:01:18 IST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:18 IST" name="startUp" finished-at="2024-05-23T14:01:22 IST" duration-ms="4021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samplepagetest/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyEducation()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:22 IST" name="toVerifyEducation" description="to verify Education Radio button" finished-at="2024-05-23T14:01:22 IST" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyEducation -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:22 IST" name="teardown" finished-at="2024-05-23T14:01:22 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:22 IST" name="startUp" finished-at="2024-05-23T14:01:26 IST" duration-ms="4350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samplepagetest/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyExperienceDropdown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:26 IST" name="toVerifyExperienceDropdown" description="to verify the Experience Dropdown functionality" finished-at="2024-05-23T14:01:27 IST" duration-ms="396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyExperienceDropdown -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:27 IST" name="teardown" finished-at="2024-05-23T14:01:27 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:27 IST" name="startUp" finished-at="2024-05-23T14:01:31 IST" duration-ms="4086" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samplepagetest/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyFunctionalCheckbox()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:31 IST" name="toVerifyFunctionalCheckbox" description="to verify the Functional Checkbox functionality" finished-at="2024-05-23T14:01:31 IST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyFunctionalCheckbox -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:31 IST" name="teardown" finished-at="2024-05-23T14:01:31 IST" duration-ms="92" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:31 IST" name="startUp" finished-at="2024-05-23T14:01:35 IST" duration-ms="3900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samplepagetest/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyManualCheckbox()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:35 IST" name="toVerifyManualCheckbox" description="to verify the Manual Checkbox functionality" finished-at="2024-05-23T14:01:35 IST" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyManualCheckbox -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:35 IST" name="teardown" finished-at="2024-05-23T14:01:35 IST" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:35 IST" name="startUp" finished-at="2024-05-23T14:01:39 IST" duration-ms="3776" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samplepagetest/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifyUploadButton()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:39 IST" name="toVerifyUploadButton" description="to verify the upload functionality" finished-at="2024-05-23T14:01:44 IST" duration-ms="5137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyUploadButton -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:44 IST" name="teardown" finished-at="2024-05-23T14:01:44 IST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startUp(java.lang.String)[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:44 IST" name="startUp" finished-at="2024-05-23T14:01:48 IST" duration-ms="3916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samplepagetest/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="toVerifymultipleCheckboxA1()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:48 IST" name="toVerifymultipleCheckboxA1" description="to verify the multiple Selection of Checkboxes Approach1" finished-at="2024-05-23T14:01:49 IST" duration-ms="353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifymultipleCheckboxA1 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:49 IST" name="teardown" finished-at="2024-05-23T14:01:49 IST" duration-ms="89" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearEnd()[pri:0, instance:tests.SampletestTest@72bc6553]" started-at="2024-05-23T14:01:49 IST" name="tearEnd" finished-at="2024-05-23T14:01:49 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearEnd -->
      </class> <!-- tests.SampletestTest -->
    </test> <!-- SampleTest -->
  </suite> <!-- Suite -->
</testng-results>
